apiVersion: config.gatekeeper.sh/v1alpha1
kind: Config
metadata:
  name: k8suniqueingresshost
spec:
  sync:
    syncOnly:
    - group: extensions
      kind: Ingress
      version: v1beta1
    - group: networking.k8s.io
      kind: Ingress
      version: v1beta1
---
apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8suniqueingresshost
spec:
  crd:
    spec:
      names:
        kind: K8sUniqueIngressHost
  targets:
  - rego: "package k8suniqueingresshost\n\nidentical(obj, review) {\n\tobj.metadata.namespace == review.object.metadata.namespace\n\tobj.metadata.name == review.object.metadata.name\n}\n\nviolation[{\"msg\": msg}] {\n\tinput.review.kind.kind == \"Ingress\"\n\tre_match(\"^(extensions|networking.k8s.io)$\", input.review.kind.group)\n\thost := input.review.object.spec.rules[_].host\n\tother := data.inventory.namespace[ns][otherapiversion].Ingress[name]\n\tre_match(\"^(extensions|networking.k8s.io)/.+$\", otherapiversion)\n\tother.spec.rules[_].host == host\n\tnot identical(other, input.review)\n\tmsg := sprintf(\"ingress host conflicts with an existing ingress <%v>\", [host])\n}"
    target: admission.k8s.gatekeeper.sh
